% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/seriate_best.R
\name{seriate_best}
\alias{seriate_best}
\alias{seriate_rep}
\title{Best Seriation}
\usage{
seriate_best(
  x,
  methods = NULL,
  criterion = NULL,
  rep = 1L,
  parallel = TRUE,
  verbose = FALSE,
  ...
)

seriate_rep(
  x,
  method,
  criterion = NULL,
  rep = 10L,
  parallel = TRUE,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{x}{the data.}

\item{methods}{a vector of character string with the name of the seriation
methods to try.}

\item{criterion}{a character string with the \link{criterion} to optimize.}

\item{rep}{number of times to repeat the randomized seriation algorithm.}

\item{parallel}{logical; perform replications in parallel.
Uses \verb{[foreach]} if a
DoPar backend (e.g., \code{doParallel}) is rgistered.}

\item{verbose}{logical; show progress and results for different methods}

\item{...}{further arguments are passed on (e.g., as \code{control})}

\item{method}{a character string with the name of the seriation method
(default: varies by data type).}
}
\value{
Returns an object of class \link{ser_permutation}.
}
\description{
It may not be know which seriation method produces the best result and
heuristics may produce unstable results.
\code{seriate_best()} and \code{seriate_rep()} automatically try different seriation methods or
rerun randomized methods several times to find the best and order
given a criterion measure.
}
\details{
Rerun different seriation methods to find the best solution given a criterion
measure. Non-stochastic methods are automatically run only once.

Support for parallel execution is provided using the \code{\link{foreach}} package. To
use parallel execution, a suitable backend needs to be registered (eee
the Examples section for using the \code{doParallel} package).
}
\examples{
# prepare some datasets (two distance matrices and a data matrix)
data(SupremeCourt)
d_supreme <- as.dist(SupremeCourt)
m_iris <- as.matrix(iris[ sample(seq(nrow(iris))),-5])

# find best seriation order (tries by by default several fast methods)
o <- seriate_best(d_supreme, verbose = TRUE)
o
pimage(d_supreme, o)

# specify the criterion
o <- seriate_best(d_supreme, criterion = "Path_length", verbose = TRUE)
o
pimage(d_supreme, o)

# find best seriation for a matrix
o <- seriate_best(m_iris, verbose = TRUE)
o
pimage(m_iris, o, prop = FALSE)

# run randomized algorithms several times. Repetition information
# is returned as attributes
o <- seriate_rep(d_supreme, "QAP_2SUM", rep = 10, verbose = TRUE)

attr(o, "criterion")
hist(attr(o, "criterion_distribution"))
pimage(d_supreme, o)

o <- seriate_rep(m_iris, "BEA_TSP", rep = 10, verbose = TRUE)

attr(o, "criterion")
hist(attr(o, "criterion_distribution"))
pimage(m_iris, o, prop = FALSE)

\dontrun{
# Using parallel execution

library(doParallel)
registerDoParallel(cores = detectCores() - 1L)
o <- seriate_best(m_iris, verbose = TRUE, rep = 10)
o



}
}
\seealso{
Other seriation: 
\code{\link{register_DendSer}()},
\code{\link{register_GA}()},
\code{\link{register_optics}()},
\code{\link{register_smacof}()},
\code{\link{register_tsne}()},
\code{\link{register_umap}()},
\code{\link{registry_for_seriaiton_methods}},
\code{\link{seriate}()}
}
\author{
Michael Hahsler
}
\concept{seriation}
\keyword{cluster}
\keyword{optimize}
