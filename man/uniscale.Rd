% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/uniscale.R
\name{uniscale}
\alias{uniscale}
\alias{configplot}
\title{Unidimensional Scaling from Seriation Results}
\usage{
uniscale(d, order = NULL, method = "MDS", rep = 10, warn = TRUE, ...)

configplot(x, main, pch = 19, ...)
}
\arguments{
\item{d}{a dissimilarity matrix.}

\item{order}{a precomputed permutation (configuration) order.  If
\code{NULL}, then seriation is performed using the method specified in
\code{method}.}

\item{method}{seriation method used if \code{o} is \code{NULL}.}

\item{rep}{Number of repetitions of the seriation heuristic.}

\item{warn}{logical; produce a warning if the 1D MDS fit does not preserve the
given order.}

\item{\dots}{additional arguments are passed on to the seriation method.}

\item{x}{a scaling returned by \code{uniscale()} or a
\code{ser_permutation} with an embedding attribute.}

\item{main}{main plot label}

\item{pch}{print character}
}
\value{
A vector with the fitted configuration.
}
\description{
Calculates an (approximate) unidimensional scaling configuration given an order.
}
\details{
This implementation uses the method describes in Maier and De Leeuw (2015) to calculate the
minimum stress configuration for a given (seriation) order by performing a 1D MDS fit.
If the 1D MDS fit does not preserve the given order perfectly (i.e., because the
order was not calculated using MDS), then a warning is produced indicating
for how many positions order could not be preserved.

If no order is specified, then
a seriation order is first found using the specified seriation method.

The code is similar to \code{uniscale()} in \pkg{smacof} (de Leeuw, 2090), but scales to larger
datasets since it only checks the permutation given by the seriation order.
}
\examples{
data(SupremeCourt)
d <- as.dist(SupremeCourt)

# embedding-based methods return a configuration as the attribute "embedding"
# configplot visualizes the embedding
o <- seriate(d, method = "MDS_sammon")
get_order(o)
attr(o[[1]], "embedding")
configplot(o)

# angle methods return a 2D configuration
o <- seriate(d, method = "MDS_angle")
get_order(o)
attr(o[[1]], "embedding")
configplot(o)

# calculate a configuration for a seriation method that does not
# use an embedding
o <- seriate(d, method = "ARSA")
get_order(o)
attr(o[[1]], "embedding")

# find the minimum-stress configuration
sc <- uniscale(d, o)
sc

configplot(sc)

}
\references{
Mair P., De Leeuw J. (2015). Unidimensional scaling. In
\emph{Wiley StatsRef: Statistics Reference Online,} Wiley, New York.
\doi{10.1002/9781118445112.stat06462.pub2}

Jan de Leeuw, Patrick Mair (2009). Multidimensional Scaling Using Majorization:
SMACOF in R. Journal of Statistical Software, 31(3), 1-30.
\doi{10.18637/jss.v031.i03}
}
\author{
Michael Hahsler with code from Patrick Mair (from \pkg{smacof}).
}
\keyword{optimize}
